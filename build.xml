<project name="jbumblebee" basedir="." default="main">

    <!--<property name="java.compilor" value="/opt/jdk1.7.0/bin/javac"/>-->
    <!--<property name="java.vm" value="/opt/jdk1.7.0/bin/java"/>-->

    <property name="java.compilor" value="/opt/jdk/latest/bin/javac"/>
    <property name="java.vm" value="/opt/jdk/latest/bin/java"/>

    <!--<property name="java.compilor" value="javac"/>-->
    <!--<property name="java.vm" value="java"/>-->

    <property name="args" value=""/>

    <property name="src.dir"     value="src"/>
    <property name="test.dir"     value="test"/>

    <property name="build.dir"   value="build"/>
    <property name="lib.dir"   value="lib"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="testbuild.dir"   value="build/test"/>
    <property name="testclasses.dir"   value="${testbuild.dir}/classes"/>
    <property name="testreport.dir"  value="${testbuild.dir}/report"/>

    <!-- If you want to launch the benchmark using a config file set this variable -->
    <property name="benchmarkconfig" value=""/>

    <property name="junit.dir"  value="lib/"/>

    <path id="project.classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>


    <path id="test.classpath">
        <path refid="project.classpath"/>
        <fileset dir="${junit.dir}" includes="junit*.jar"/>
        <fileset dir="${jar.dir}" includes="**/${ant.project.name}.jar"/>
    </path>

    <path id="jar.classpath">
         <fileset dir="lib/" includes="BoofCV.jar"/>
    </path>


    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">

        <!-- Capture the path as a delimited property using the refid attribute -->
        <!--<property name="myclasspath" refid="project.classpath"/>-->
        <!-- Emit the property to the ant console -->
        <!--<echo message="Classpath = ${myclasspath}"/>-->


        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}"
               fork="yes" executable="${java.compilor}"
               includejavaruntime="false"
               includeantruntime="false" >
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}"/>
    </target>

    <target name="sequence" depends="jar">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/sequence.jar" basedir="${classes.dir}">

        <zipgroupfileset dir="lib" includes="BoofCV.jar"/>
        <zipgroupfileset dir="${jar.dir}" includes="${ant.project.name}.jar"/>

        <manifest>
            <attribute name="Main-Class" value="boofcv.drivers.stereo.CaptureSequence"/>
            <attribute name="Class-Path" value="jar.classpath"/>
        </manifest>
        </jar>
    </target>

    <target name="test" depends="jar">
        <mkdir dir="${testbuild.dir}"/>
        <mkdir dir="${testreport.dir}"/>
        <mkdir dir="${testclasses.dir}"/>

        <javac srcdir="${test.dir}" destdir="${testclasses.dir}"
               fork="yes" executable="${java.compilor}"
               includejavaruntime="false"
               includeantruntime="false" >
           <classpath>
                <path refid="test.classpath"/>
            </classpath>
        </javac>

        <junit printsummary="yes" showoutput="yes">
            <classpath>
                <path refid="test.classpath"/>
                <pathelement location="${testclasses.dir}"/>
            </classpath>

            <formatter type="xml"/>

            <batchtest fork="yes" todir="${testreport.dir}">
                <fileset dir="${test.dir}" includes="**/Test*.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="testreport">
        <junitreport todir="${testreport.dir}">
            <fileset dir="${testreport.dir}" includes="TEST-*.xml"/>
            <report todir="${testreport.dir}"/>
        </junitreport>
    </target>

    <target name="javadoc">
        <javadoc
                destdir="docs/api"
                author="true"
                version="true"
                use="true"
                windowtitle="JBumbleBee">

            <packageset dir="src" defaultexcludes="yes">
                <include name="boofcv/**"/>
            </packageset>
        </javadoc>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,jar"/>
</project>
